
/**
 * We're adding a "graph". This is an abstraction in Cmajor that allows us to
 * easily connect things.
 *
 * For the purpose of the enabler session this allows us to more easily use
 * some of the features from the standard library.
 */

graph Main  [[ main ]] {
    output stream float out;
    input generator.frequency;

    node generator = SoundGenerator;

    connection generator.out -> out;
}

processor SoundGenerator {
    output stream float out;
    input value float frequency [[ name: "Frequency", min: 5.0f, max: 1000.0f, init: 440.0f ]];

    void main() {
        loop {
            out <- volume * sin (phase);

            let phaseDelta = float (frequency * processor.period * twoPi);
            phase = addModulo2Pi (phase, phaseDelta);
            advance();
        }
    }

    let volume = 0.15f;
    float phase;
}
